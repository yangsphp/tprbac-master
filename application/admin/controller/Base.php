<?php
/**
 * Created by PhpStorm.
 * User: 25754
 * Date: 2020/3/11
 * Time: 16:02
 */

namespace app\admin\controller;

use app\admin\model\Auth as AuthModel;
use app\admin\model\Role as RoleModel;
use app\admin\model\Admin as AdminModel;
use think\Config;
use think\Controller;
use think\Session;

class Base extends Controller
{
    private $nowUrl;
    private $module;
    private $controller;
    private $action;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->module = strtolower($this->request->module());
        $this->controller = strtolower($this->request->controller());
        $this->action = strtolower($this->request->action());
        $this->nowUrl = $this->controller . '/' . $this->action;
        $this->checkUserIsLogin();
        $auth = $this->getMenu();
        if (!$this->checkWhite()) {
            //当前url需要进行权限验证
            //判断是否为超级管理员
            if ($auth) {
                //不是超级管理员，则进行权限验证
                $this->checkPrivilege($auth);
            }
        }
    }

    /**
     * 检查白名单
     * @return bool
     */
    public function checkWhite()
    {
        $white = Config::get('white');
        $allowAction = @$white[$this->module][$this->controller];
        if ($allowAction) {
            return in_array($this->action, $allowAction) ? true : false;
        }
        return false;
    }

    /**
     * 检查用户登录
     * @return bool
     */
    public function checkUserIsLogin()
    {
        $user = Session::get("user");
        if (!$user) {
            $this->error("没有登录，请先登录！", url('user/login'));
        }
        $this->assign("roleName", $user['name']);
        return true;
    }

    public function getMenu()
    {
        $user = Session::get("user");
        $admin = AdminModel::get($user['id']);
        $role = RoleModel::get($admin->role_id);
        //获取角色权限
        $where = "is_menu=1 and status=1";
        if ($user['id'] != 1) {
            $where .= " and id in({$role->auth})";
        }
        $authModel = new AuthModel();
        $auth = $authModel->getMenuByWhere($where);
        $this->assign('auth', getRoleTree($auth));
        return $role->auth;
    }

    public function checkPrivilege($auth)
    {
        $authModel = new AuthModel();
        $auth = $authModel->getMenuByWhere("status=1 and id in($auth)");
        $urls = array();
        foreach ($auth as $k => $v) {
            $urls[] = $v['url'];
        }
        if (!in_array($this->nowUrl, $urls)) {
            $this->error("你没有权限操作，请联系管理员");
        }
    }
}